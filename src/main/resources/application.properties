spring.application.name=cryptox-service
spring.profiles.active=production
# amazon aws
cryptox.server.port=5000

server.port=${cryptox.server.port}

# spring security basic authentication for web service
spring.security.user.name=enixRoot
spring.security.user.password=$EnixKrakenCryptoxProject2020

spring.boot.admin.routes.endpoints=env, metrics, trace, debug, info, warn, error, fatal, jolokia, configprops
spring.boot.admin.client.url=http://localhost:${cryptox.server.port}
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

spring.boot.admin.client.username=${spring.security.user.name}
spring.boot.admin.client.password=${spring.security.user.password}

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

logging.file.name=logs/cryptox-service.log
management.endpoint.logfile.external-file=${logging.file.name}

api.kraken.apiKey=fwMJpFr3jXNxllLYTr0jyXuVbFslNsEu40eE59YknAm9ujt1h0QTwUxC
api.kraken.privateKey=F1NatMJNSZdyFQ88mdQQM3qSO9OmK681VhhZ3gKijWJeuSmzkMF/9k3gdnniwQeY26VWnSjL+4pBgifJUjfyEg==
api.kraken.url.webservice=https://api.kraken.com
api.kraken.url.websocket=wss://ws.kraken.com/

# litecoin to euro
cryptox.controller.tickers[0].assetPair=XLTC/ZEUR
cryptox.controller.tickers[0].run=true
cryptox.controller.tickers[0].block=0

# fixed threshold trading
cryptox.threshold.litecoin.default.buy=30
cryptox.threshold.litecoin.default.sell=50

logging.level.org.springframework=INFO
